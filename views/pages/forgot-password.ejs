<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="center-grid">
  
  <form onsubmit="getUserInfo(event)" id="password-reset-container">
    <h2>Reset Password</h3>
      <div class="input">
        <label for="email">Email</label>
        <input type="text" id="email" autocomplete="off" required>
        <span></span>
      </div>
 
    <button class="submit" type="submit"><p>Submit</p></button>

    <p id="form-error"></p>
  </form>

  <form id="get-code-options" onsubmit="sendCode(event)">
    <h2>Password Reset code</h2>
    <p>How would you like to receive your code to reset your password?</p>
    <div class="radio-input">
      <label for="email-code-option">Email:</label>
      <input type="radio" name="code-option" id="email-code-option" required>
      <label for="email-code-option" class="code-option" id="email-option-value"></label>
    </div>
    <div class="radio-input">
      <label for="phone-code-option">Phone:</label>
      <input type="radio" name="code-option" id="phone-code-option" required>
      <label for="phone-code-option" class="code-option" id="phone-option-value"></label>
    </div>

    <button class="submit" type="submit"><p>Send Code</p></button>
    
    <p id="form-error"></p>
  </form>
  
  <form id="verify-code" onsubmit="verifyCode(event)">
    <h2>Verify Code</h2>
    <div class="input">
      <label for="OTPCode">Code</label>
      <input type="number" id="OTPCode" autocomplete="off" max="999999" required>
      <span></span>
    </div>
    <button class="submit" type="submit"><p>Verify</p></button>
    
    <p id="form-error"></p>
  </form>


  <script>
    const passwordResetContainerDOM = document.getElementById('password-reset-container');
    const getCodeOptionsDOM = document.getElementById('get-code-options');
    const verifyCodeDOM = document.getElementById('verify-code');
    let user;
    const hideElem = (elem) => {
      elem.style.display = 'none';
      elem.style.visibility = 'hidden';
    }
    const showElem = (elem) => {
      elem.style.display = 'block';
      elem.style.visibility = 'visible';
    }
    const showError = (errorMsg) => {
      console.log('error')
      const formErrorDOM = document.getElementById('form-error');
      formErrorDOM.textContent = errorMsg;
      showElem(formErrorDOM);
    }
    const hideError = () => {
      const formErrorDOM = document.getElementById('form-error');
      hideElem(formErrorDOM);
    }

    const getUserInfo = async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById('email').value;
      console.log(emailInput)

      user = await axios({
        method: 'get',
        url: '/api/v1/MinistryPlatformAPI/reset-password/user',
        params: {
          email: emailInput
        }
      })
        .then(response => response.data)
        .catch(err => {
          console.log(err)
          return null;
        });

      if (!user) {
        showError('User not found');
        return;
      }

      const emailOptionValueDOM = document.getElementById('email-option-value');
      const phoneOptionValueDOM = document.getElementById('phone-option-value');
      emailOptionValueDOM.textContent = user.Email_Address;
      phoneOptionValueDOM.textContent = user.Phone_Number;

      hideElem(passwordResetContainerDOM);
      showElem(getCodeOptionsDOM);
    }

    const sendCode = async (e) => {
      e.preventDefault();

      // send code
      const text = await axios({
        method: 'get',
        url: '/api/v1/MinistryPlatformAPI/reset-password/get-code',
        params: {
          User_ID: user.User_ID,
          Method: 'text'
        }
      })
        .then(response => response.data)
        .catch(error => console.log(error));

      if (!text) {
        showError('Something Went Wrong. Please Try Again')
      }

      hideElem(getCodeOptionsDOM);
      showElem(verifyCodeDOM);
      // console.log('Code Sent')
    }

    const verifyCode = async (e) => {
      e.preventDefault();

      const codeInputDOM = document.getElementById('OTPCode');

      const isValid = await axios({
        method: 'post',
        url: '/api/v1/MinistryPlatformAPI/reset-password/verify-code',
        data: {
          OTPCode: codeInputDOM.value
        }
      })
        .then(response => response.data)
        .catch(error => console.log(error));

      if (!isValid) {
        showError('Wrong Code');
        return;
      } else {
        console.log('Correct Code')
      }
    }
  </script>
</body>
</html>